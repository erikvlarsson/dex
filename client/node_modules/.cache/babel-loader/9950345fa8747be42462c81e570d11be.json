{"ast":null,"code":"import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let res = false;\n    await Api.post(\"/register\", userData).then(response => {\n      if (response.status === 201) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  async login(userData) {\n    let authenticated = false;\n    await Api.post(\"/login\", userData).then(response => {\n      if (response.data.authenticated) {\n        localStorage.access_token = response.data.access_token;\n        authenticated = true;\n      }\n    });\n    return authenticated;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then(response => {\n      res = response;\n    });\n    return res;\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Shared/UserService.js"],"names":["Api","UserService","register","userData","res","post","then","response","status","login","authenticated","data","localStorage","access_token","getUsers","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,QAAN,CAAeC,QAAf,EAAyB;AACvB,QAAIC,GAAG,GAAG,KAAV;AACA,UAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsBF,QAAtB,EAAgCG,IAAhC,CAAsCC,QAAD,IAAc;AACvD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BJ,QAAAA,GAAG,GAAG,IAAN;AACD;AACF,KAJK,CAAN;AAKA,WAAOA,GAAP;AACD;;AAED,QAAMK,KAAN,CAAYN,QAAZ,EAAsB;AACpB,QAAIO,aAAa,GAAG,KAApB;AACA,UAAMV,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmBF,QAAnB,EAA6BG,IAA7B,CAAmCC,QAAD,IAAc;AACpD,UAAIA,QAAQ,CAACI,IAAT,CAAcD,aAAlB,EAAiC;AAC/BE,QAAAA,YAAY,CAACC,YAAb,GAA4BN,QAAQ,CAACI,IAAT,CAAcE,YAA1C;AACAH,QAAAA,aAAa,GAAG,IAAhB;AACD;AACF,KALK,CAAN;AAMA,WAAOA,aAAP;AACD;;AAED,QAAMI,QAAN,GAAiB;AACf,QAAIV,GAAG,GAAG,IAAV;AACA,UAAMJ,GAAG,CAACe,GAAJ,CAAQ,QAAR,EAAkBT,IAAlB,CAAwBC,QAAD,IAAc;AACzCH,MAAAA,GAAG,GAAGG,QAAN;AACD,KAFK,CAAN;AAGA,WAAOH,GAAP;AACD;;AA5Be;;AA+BlB,eAAeH,WAAf","sourcesContent":["import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let res = false;\n    await Api.post(\"/register\", userData).then((response) => {\n      if (response.status === 201) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  async login(userData) {\n    let authenticated = false;\n    await Api.post(\"/login\", userData).then((response) => {\n      if (response.data.authenticated) {\n        localStorage.access_token = response.data.access_token;\n        authenticated = true;\n      }\n    });\n    return authenticated;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then((response) => {\n      res = response;\n    });\n    return res;\n  }\n}\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}