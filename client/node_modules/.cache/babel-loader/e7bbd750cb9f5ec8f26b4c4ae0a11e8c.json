{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/dex/client/src/Pages/Home/Components/Journal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PostService from \"../../../Shared/PostService\";\nimport JournalForm from \"../Components/JournalForm\";\nimport Post from \"../Components/Post\";\nexport default function Journal() {\n  _s();\n\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    if (!hasLoaded) {\n      const postService = new PostService();\n      postService.getPosts().then(posts => {\n        if (posts) {\n          setPosts(posts);\n          setHasLoaded(true);\n        } else {\n          alert(\"error!\");\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(JournalForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), posts ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      data: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 36\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Journal, \"pFK+hCsiUL5nIzu06Zu06UQBOe0=\");\n\n_c = Journal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/dex/client/src/Pages/Home/Components/Journal.js"],"names":["React","useEffect","useState","PostService","JournalForm","Post","Journal","hasLoaded","setHasLoaded","posts","setPosts","postService","getPosts","then","alert","map","post"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,SAAL,EAAgB;AACd,YAAMI,WAAW,GAAG,IAAIR,WAAJ,EAApB;AACAQ,MAAAA,WAAW,CAACC,QAAZ,GAAuBC,IAAvB,CAA6BJ,KAAD,IAAW;AACrC,YAAIA,KAAJ,EAAW;AACTC,UAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAHD,MAGO;AACLM,UAAAA,KAAK,CAAC,QAAD,CAAL;AACD;AACF,OAPD;AAQD;AACF,GAZQ,CAAT;AAcA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,EAEGL,KAAK,GAAGA,KAAK,CAACM,GAAN,CAAWC,IAAD,iBAAU,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAApB,CAAH,GAA+C,IAFvD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAxBuBV,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PostService from \"../../../Shared/PostService\";\nimport JournalForm from \"../Components/JournalForm\";\nimport Post from \"../Components/Post\";\n\nexport default function Journal() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    if (!hasLoaded) {\n      const postService = new PostService();\n      postService.getPosts().then((posts) => {\n        if (posts) {\n          setPosts(posts);\n          setHasLoaded(true);\n        } else {\n          alert(\"error!\");\n        }\n      });\n    }\n  });\n\n  return (\n    <div>\n      <JournalForm />\n      {posts ? posts.map((post) => <Post data={post} />) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}