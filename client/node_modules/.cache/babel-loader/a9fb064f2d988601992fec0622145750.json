{"ast":null,"code":"import ApiService from \"./ApiService\";\n\nclass PostService extends ApiService {\n  constructor(...args) {\n    super(...args);\n\n    this.createPost = async post => {\n      let result = null;\n      await this.Api.post(\"/posts\", post).then(response => {\n        if (response.status === 201) {\n          result = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      return result;\n    };\n\n    this.getPosts = async userData => {\n      let posts = null;\n      await this.Api.get(\"/posts\", userData).then(response => {\n        if (response.status === 200) {\n          posts = response.data;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      return posts;\n    };\n\n    this.deletePost = async postId => {\n      let deletion = null;\n      await this.Api.delete(`/posts/${postId}`).then(response => {\n        if (response.status === 200) {\n          deletion = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      return deletion;\n    };\n\n    this.updatePost = async post => {\n      let didUpdate = null;\n      await this.Api.put(\"/posts\", post).then(response => {\n        if (response.status === 200) {\n          didUpdate = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      return didUpdate;\n    };\n  }\n\n}\n\nexport default PostService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/dex/client/src/Shared/PostService.js"],"names":["ApiService","PostService","createPost","post","result","Api","then","response","status","catch","error","console","log","getPosts","userData","posts","get","data","deletePost","postId","deletion","delete","updatePost","didUpdate","put"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,SAA0BD,UAA1B,CAAqC;AAAA;AAAA;;AAAA,SACnCE,UADmC,GACtB,MAAOC,IAAP,IAAgB;AAC3B,UAAIC,MAAM,GAAG,IAAb;AACA,YAAM,KAAKC,GAAL,CAASF,IAAT,CAAc,QAAd,EAAwBA,IAAxB,EACHG,IADG,CACGC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BJ,UAAAA,MAAM,GAAG,IAAT;AACD;AACF,OALG,EAMHK,KANG,CAMIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OARG,CAAN;AASA,aAAON,MAAP;AACD,KAbkC;;AAAA,SAenCS,QAfmC,GAexB,MAAOC,QAAP,IAAoB;AAC7B,UAAIC,KAAK,GAAG,IAAZ;AACA,YAAM,KAAKV,GAAL,CAASW,GAAT,CAAa,QAAb,EAAuBF,QAAvB,EACHR,IADG,CACGC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BO,UAAAA,KAAK,GAAGR,QAAQ,CAACU,IAAjB;AACD;AACF,OALG,EAMHR,KANG,CAMIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OARG,CAAN;AASA,aAAOK,KAAP;AACD,KA3BkC;;AAAA,SA6BnCG,UA7BmC,GA6BtB,MAAOC,MAAP,IAAkB;AAC7B,UAAIC,QAAQ,GAAG,IAAf;AACA,YAAM,KAAKf,GAAL,CAASgB,MAAT,CAAiB,UAASF,MAAO,EAAjC,EACHb,IADG,CACGC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BY,UAAAA,QAAQ,GAAG,IAAX;AACD;AACF,OALG,EAMHX,KANG,CAMIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OARG,CAAN;AASA,aAAOU,QAAP;AACD,KAzCkC;;AAAA,SA2CnCE,UA3CmC,GA2CtB,MAAOnB,IAAP,IAAgB;AAC3B,UAAIoB,SAAS,GAAG,IAAhB;AACA,YAAM,KAAKlB,GAAL,CAASmB,GAAT,CAAa,QAAb,EAAuBrB,IAAvB,EACHG,IADG,CACGC,QAAD,IAAc;AAClB,YAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3Be,UAAAA,SAAS,GAAG,IAAZ;AACD;AACF,OALG,EAMHd,KANG,CAMIC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OARG,CAAN;AASA,aAAOa,SAAP;AACD,KAvDkC;AAAA;;AAAA;;AA0DrC,eAAetB,WAAf","sourcesContent":["import ApiService from \"./ApiService\";\n\nclass PostService extends ApiService {\n  createPost = async (post) => {\n    let result = null;\n    await this.Api.post(\"/posts\", post)\n      .then((response) => {\n        if (response.status === 201) {\n          result = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return result;\n  };\n\n  getPosts = async (userData) => {\n    let posts = null;\n    await this.Api.get(\"/posts\", userData)\n      .then((response) => {\n        if (response.status === 200) {\n          posts = response.data;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return posts;\n  };\n\n  deletePost = async (postId) => {\n    let deletion = null;\n    await this.Api.delete(`/posts/${postId}`)\n      .then((response) => {\n        if (response.status === 200) {\n          deletion = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return deletion;\n  };\n\n  updatePost = async (post) => {\n    let didUpdate = null;\n    await this.Api.put(\"/posts\", post)\n      .then((response) => {\n        if (response.status === 200) {\n          didUpdate = true;\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n    return didUpdate;\n  };\n}\n\nexport default PostService;\n"]},"metadata":{},"sourceType":"module"}