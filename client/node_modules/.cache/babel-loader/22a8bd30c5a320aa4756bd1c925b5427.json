{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/frontend/src/Contexts/AuthContext.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, createContext, useCallback } from \"react\";\nimport UserService from \"../Shared/UserService\";\nexport const AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [authenticated, setAuthenticated] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  const setAuth = async bool => {\n    setAuthenticated(bool);\n  };\n\n  const logout = async () => {\n    setAuth(false).then(() => {\n      localStorage.removeItem(\"refreshToken\");\n      sessionStorage.removeItem(\"accessToken\");\n    });\n  }; //tries to authenticate on component mount\n\n\n  useEffect(() => {\n    if (!hasLoaded) {\n      var _s = $RefreshSig$();\n\n      const userService = new UserService();\n      userService.getRefreshToken().then(_s(auth => {\n        _s();\n\n        if (auth) {\n          useCallback(() => {\n            setAuth(auth);\n            setTimeout(() => setHasLoaded(true), 1500);\n          }, [auth]);\n        } else {\n          logout().then(() => {\n            setHasLoaded(true);\n          });\n        }\n      }, \"epj4qY15NHsef74wNqHIp5fdZmg=\")).catch(() => {\n        logout().then(() => {\n          setHasLoaded(true);\n        });\n      });\n    }\n  }, [hasLoaded, setAuth, setHasLoaded, logout]); // //tries to authenticate on component mount\n  // useEffect(() => {\n  //   if (!hasLoaded) {\n  //     const userService = new UserService();\n  //     userService\n  //       .getRefreshToken()\n  //       .then((auth) => {\n  //         setAuth(auth).then(() => {\n  //           if (auth) {\n  //             setTimeout(() => setHasLoaded(true), 1500);\n  //           } else {\n  //             logout().then(() => {\n  //               setHasLoaded(true);\n  //             });\n  //           }\n  //         });\n  //       })\n  //       .catch(() => {\n  //         logout().then(() => {\n  //           setHasLoaded(true);\n  //         });\n  //       });\n  //   }\n  // }, [hasLoaded, setAuth, setHasLoaded, logout]);\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      hasLoaded: hasLoaded,\n      auth: authenticated,\n      setAuth: setAuth,\n      logout: logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthContextProvider, \"LF7z+CgqUO3h9FC9m1eS6zEhSjo=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Contexts/AuthContext.js"],"names":["React","useState","useEffect","createContext","useCallback","UserService","AuthContext","AuthContextProvider","children","authenticated","setAuthenticated","hasLoaded","setHasLoaded","setAuth","bool","logout","then","localStorage","removeItem","sessionStorage","userService","getRefreshToken","auth","setTimeout","catch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,EAAoDC,WAApD,QAAuE,OAAvE;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAO,MAAMC,WAAW,gBAAGH,aAAa,CAAC,IAAD,CAAjC;AAEP,OAAO,MAAMI,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnD,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMY,OAAO,GAAG,MAAOC,IAAP,IAAgB;AAC9BJ,IAAAA,gBAAgB,CAACI,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,YAAY;AACzBF,IAAAA,OAAO,CAAC,KAAD,CAAP,CAAeG,IAAf,CAAoB,MAAM;AACxBC,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACAC,MAAAA,cAAc,CAACD,UAAf,CAA0B,aAA1B;AACD,KAHD;AAID,GALD,CARmD,CAenD;;;AACAhB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACS,SAAL,EAAgB;AAAA;;AACd,YAAMS,WAAW,GAAG,IAAIf,WAAJ,EAApB;AACAe,MAAAA,WAAW,CACRC,eADH,GAEGL,IAFH,IAESM,IAAD,IAAU;AAAA;;AACd,YAAIA,IAAJ,EAAU;AACRlB,UAAAA,WAAW,CAAC,MAAM;AAChBS,YAAAA,OAAO,CAACS,IAAD,CAAP;AACAC,YAAAA,UAAU,CAAC,MAAMX,YAAY,CAAC,IAAD,CAAnB,EAA2B,IAA3B,CAAV;AACD,WAHU,EAGR,CAACU,IAAD,CAHQ,CAAX;AAID,SALD,MAKO;AACLP,UAAAA,MAAM,GAAGC,IAAT,CAAc,MAAM;AAClBJ,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,WAFD;AAGD;AACF,OAbH,mCAcGY,KAdH,CAcS,MAAM;AACXT,QAAAA,MAAM,GAAGC,IAAT,CAAc,MAAM;AAClBJ,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,SAFD;AAGD,OAlBH;AAmBD;AACF,GAvBQ,EAuBN,CAACD,SAAD,EAAYE,OAAZ,EAAqBD,YAArB,EAAmCG,MAAnC,CAvBM,CAAT,CAhBmD,CAyCnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,SAAS,EAAEA,SADN;AAELW,MAAAA,IAAI,EAAEb,aAFD;AAGLI,MAAAA,OAAO,EAAEA,OAHJ;AAILE,MAAAA,MAAM,EAAEA;AAJH,KADT;AAAA,cAQGP;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA9EM;;IAAMD,mB;;KAAAA,mB","sourcesContent":["import React, { useState, useEffect, createContext, useCallback } from \"react\";\nimport UserService from \"../Shared/UserService\";\nexport const AuthContext = createContext(null);\n\nexport const AuthContextProvider = ({ children }) => {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  const setAuth = async (bool) => {\n    setAuthenticated(bool);\n  };\n\n  const logout = async () => {\n    setAuth(false).then(() => {\n      localStorage.removeItem(\"refreshToken\");\n      sessionStorage.removeItem(\"accessToken\");\n    });\n  };\n\n  //tries to authenticate on component mount\n  useEffect(() => {\n    if (!hasLoaded) {\n      const userService = new UserService();\n      userService\n        .getRefreshToken()\n        .then((auth) => {\n          if (auth) {\n            useCallback(() => {\n              setAuth(auth);\n              setTimeout(() => setHasLoaded(true), 1500);\n            }, [auth]);\n          } else {\n            logout().then(() => {\n              setHasLoaded(true);\n            });\n          }\n        })\n        .catch(() => {\n          logout().then(() => {\n            setHasLoaded(true);\n          });\n        });\n    }\n  }, [hasLoaded, setAuth, setHasLoaded, logout]);\n\n  // //tries to authenticate on component mount\n  // useEffect(() => {\n  //   if (!hasLoaded) {\n  //     const userService = new UserService();\n  //     userService\n  //       .getRefreshToken()\n  //       .then((auth) => {\n  //         setAuth(auth).then(() => {\n  //           if (auth) {\n  //             setTimeout(() => setHasLoaded(true), 1500);\n  //           } else {\n  //             logout().then(() => {\n  //               setHasLoaded(true);\n  //             });\n  //           }\n  //         });\n  //       })\n  //       .catch(() => {\n  //         logout().then(() => {\n  //           setHasLoaded(true);\n  //         });\n  //       });\n  //   }\n  // }, [hasLoaded, setAuth, setHasLoaded, logout]);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        hasLoaded: hasLoaded,\n        auth: authenticated,\n        setAuth: setAuth,\n        logout: logout,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}