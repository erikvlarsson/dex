{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/frontend/src/Pages/Blog/Blog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PostService from \"../../Shared/PostService\";\nimport { BiEdit, BiTrash } from \"react-icons/bi\";\nimport \"./Blog.css\";\nimport \"../../Styles/Buttons.css\";\nexport default function Posts() {\n  _s();\n\n  const [postInput, setPostInput] = useState(\"\");\n  const [postId, setPostId] = useState(null);\n  const [posts, setPosts] = useState(null);\n  const [postsFetched, setPostsFetched] = useState(false);\n  const postService = new PostService();\n\n  const submitPost = e => {\n    e.preventDefault();\n    postService.createPost({\n      content: postInput\n    });\n    getPosts();\n  };\n\n  const getPosts = () => {\n    postService.getPosts().then(posts => {\n      setPosts(posts);\n      setPostsFetched(true);\n    });\n  };\n\n  const editPost = () => {};\n\n  const deletePost = id => {\n    postService.deletePost(id).then(() => {\n      getPosts();\n    });\n  };\n\n  const write = e => {\n    setPostInput(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!postsFetched) {\n      getPosts();\n    }\n\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"postScroll\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"post marginY\",\n      onSubmit: submitPost,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        onBlur: write,\n        placeholder: \"Capture a Feeling, Articulate a Thought...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"postButton\",\n        className: \"altButton\",\n        children: \"Publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), posts ? posts.map(post => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post marginY\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"column\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"postIconButton\",\n            onClick: () => deletePost(post._id),\n            children: /*#__PURE__*/_jsxDEV(BiTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"postIconButton\",\n            children: /*#__PURE__*/_jsxDEV(BiEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }, this);\n    }) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Posts, \"K0ZD4+ZZl0S0bb1kkyG/6Fzdx68=\");\n\n_c = Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Pages/Blog/Blog.js"],"names":["React","useState","useEffect","PostService","BiEdit","BiTrash","Posts","postInput","setPostInput","postId","setPostId","posts","setPosts","postsFetched","setPostsFetched","postService","submitPost","e","preventDefault","createPost","content","getPosts","then","editPost","deletePost","id","write","target","value","map","post","display","flexDirection","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PostService from \"../../Shared/PostService\";\nimport { BiEdit, BiTrash } from \"react-icons/bi\";\nimport \"./Blog.css\";\nimport \"../../Styles/Buttons.css\";\n\nexport default function Posts() {\n  const [postInput, setPostInput] = useState(\"\");\n  const [postId, setPostId] = useState(null);\n  const [posts, setPosts] = useState(null);\n  const [postsFetched, setPostsFetched] = useState(false);\n\n  const postService = new PostService();\n\n  const submitPost = (e) => {\n    e.preventDefault();\n    postService.createPost({ content: postInput });\n    getPosts();\n  };\n  const getPosts = () => {\n    postService.getPosts().then((posts) => {\n      setPosts(posts);\n      setPostsFetched(true);\n    });\n  };\n  const editPost = () => {};\n  const deletePost = (id) => {\n    postService.deletePost(id).then(() => {\n      getPosts();\n    });\n  };\n\n  const write = (e) => {\n    setPostInput(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!postsFetched) {\n      getPosts();\n    }\n    return () => {};\n  }, []);\n\n  return (\n    <div className=\"postScroll\">\n      <form className=\"post marginY\" onSubmit={submitPost}>\n        <textarea\n          onBlur={write}\n          placeholder=\"Capture a Feeling, Articulate a Thought...\"\n        ></textarea>\n        {/* <div className=\"post inputDisplay\">{input}</div> */}\n        <button id=\"postButton\" className=\"altButton\">\n          Publish\n        </button>\n      </form>\n      {posts\n        ? posts.map((post) => {\n            return (\n              <div className=\"post marginY\">\n                <div className=\"content\">{post.content}</div>\n                <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                  <button\n                    className=\"postIconButton\"\n                    onClick={() => deletePost(post._id)}\n                  >\n                    <BiTrash />\n                  </button>\n                  <button className=\"postIconButton\">\n                    <BiEdit />\n                  </button>\n                </div>\n              </div>\n            );\n          })\n        : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}