{"ast":null,"code":"import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let registered = false;\n    await Api.post(\"/register\", userData).then(response => {\n      if (response.status === 201) {\n        registered = true;\n      }\n    });\n    return registered;\n  }\n\n  async authorize() {\n    let authorized = false;\n    Api.get(\"/authorize\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.access_token //the token is a variable which holds the token\n\n      }\n    }).then(response => {\n      if (response.status === 200) authorized = true;\n    });\n    return authorized;\n  }\n\n  async login(userData) {\n    let authenticated = false;\n    await Api.post(\"/login\", userData).then(response => {\n      if (response.status === 200) {\n        localStorage.access_token = response.data.access_token;\n        authenticated = true;\n      }\n    });\n    return authenticated;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then(response => {\n      res = response;\n    });\n    return res;\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Shared/UserService.js"],"names":["Api","UserService","register","userData","registered","post","then","response","status","authorize","authorized","get","headers","Authorization","localStorage","access_token","login","authenticated","data","getUsers","res"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,QAAN,CAAeC,QAAf,EAAyB;AACvB,QAAIC,UAAU,GAAG,KAAjB;AACA,UAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsBF,QAAtB,EAAgCG,IAAhC,CAAsCC,QAAD,IAAc;AACvD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BJ,QAAAA,UAAU,GAAG,IAAb;AACD;AACF,KAJK,CAAN;AAKA,WAAOA,UAAP;AACD;;AAED,QAAMK,SAAN,GAAkB;AAChB,QAAIC,UAAU,GAAG,KAAjB;AACAV,IAAAA,GAAG,CAACW,GAAJ,CAAQ,YAAR,EAAsB;AACpBC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,YADjC,CAC+C;;AAD/C;AADW,KAAtB,EAIGT,IAJH,CAISC,QAAD,IAAc;AACpB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6BE,UAAU,GAAG,IAAb;AAC9B,KAND;AAOA,WAAOA,UAAP;AACD;;AAED,QAAMM,KAAN,CAAYb,QAAZ,EAAsB;AACpB,QAAIc,aAAa,GAAG,KAApB;AACA,UAAMjB,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmBF,QAAnB,EAA6BG,IAA7B,CAAmCC,QAAD,IAAc;AACpD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BM,QAAAA,YAAY,CAACC,YAAb,GAA4BR,QAAQ,CAACW,IAAT,CAAcH,YAA1C;AACAE,QAAAA,aAAa,GAAG,IAAhB;AACD;AACF,KALK,CAAN;AAMA,WAAOA,aAAP;AACD;;AAED,QAAME,QAAN,GAAiB;AACf,QAAIC,GAAG,GAAG,IAAV;AACA,UAAMpB,GAAG,CAACW,GAAJ,CAAQ,QAAR,EAAkBL,IAAlB,CAAwBC,QAAD,IAAc;AACzCa,MAAAA,GAAG,GAAGb,QAAN;AACD,KAFK,CAAN;AAGA,WAAOa,GAAP;AACD;;AAxCe;;AA2ClB,eAAenB,WAAf","sourcesContent":["import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let registered = false;\n    await Api.post(\"/register\", userData).then((response) => {\n      if (response.status === 201) {\n        registered = true;\n      }\n    });\n    return registered;\n  }\n\n  async authorize() {\n    let authorized = false;\n    Api.get(\"/authorize\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.access_token, //the token is a variable which holds the token\n      },\n    }).then((response) => {\n      if (response.status === 200) authorized = true;\n    });\n    return authorized;\n  }\n\n  async login(userData) {\n    let authenticated = false;\n    await Api.post(\"/login\", userData).then((response) => {\n      if (response.status === 200) {\n        localStorage.access_token = response.data.access_token;\n        authenticated = true;\n      }\n    });\n    return authenticated;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then((response) => {\n      res = response;\n    });\n    return res;\n  }\n}\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}