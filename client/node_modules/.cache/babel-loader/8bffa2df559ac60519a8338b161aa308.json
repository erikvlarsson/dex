{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/dex/client/src/Pages/Questionnaire/Questionnaire.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport PostService from \"../../Shared/PostService\";\nimport Foods from \"./Foods\";\nimport \"./Questionnaire.css\";\nexport default function Questionnaire() {\n  _s();\n\n  const postService = new PostService();\n  const [feeling, setFeeling] = useState(1);\n  const [factors, setFactors] = useState([]);\n\n  const pick = factor => {\n    if (!factors.includes(factor)) {\n      addFactor(factor);\n    } else {\n      removeFactor(factor);\n    }\n  };\n\n  const addFactor = value => {\n    let factorsCopy = [...factors];\n    factorsCopy.push(value);\n    setFactors(factorsCopy);\n  };\n\n  const removeFactor = value => {\n    let factorsCopy = [...factors];\n    const index = factorsCopy.indexOf(value);\n\n    if (index > -1) {\n      factorsCopy.splice(index, 1);\n    }\n\n    setFactors(factorsCopy);\n  };\n\n  const submitPost = () => {\n    // feeling 1 for good, 0 for bad\n    postService.createPost(feeling, factors);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questionnaire\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: \"Let's figure out why you feel ___!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [/*#__PURE__*/_jsxDEV(Foods, {\n        factors: factors,\n        pick: pick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Foods, {\n        factors: otherFactors,\n        pick: pick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(feeling)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(factors)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitPost,\n      children: \"SUBMIT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Questionnaire, \"hSlsPwSkkd/UzN+aQkgJfkGrE3E=\");\n\n_c = Questionnaire;\nconst intoxicants = [\"caffeine\", \"alcohol\", \"marijuana\", \"cigarettes\", \"medication\", \"other\"];\nconst otherFactors = [\"Nut\", \"LateNightMeal\", \"Stress\", \"Boredom\", \"Inactivity\"]; // MEAL SIZE\n// MEAL CONTENT\n// MEAL TIME\n// MOOD AT THE TIME OF MEAL\n\nvar _c;\n\n$RefreshReg$(_c, \"Questionnaire\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/dex/client/src/Pages/Questionnaire/Questionnaire.js"],"names":["React","useState","PostService","Foods","Questionnaire","postService","feeling","setFeeling","factors","setFactors","pick","factor","includes","addFactor","removeFactor","value","factorsCopy","push","index","indexOf","splice","submitPost","createPost","otherFactors","JSON","stringify","intoxicants"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,qBAAP;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,QAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,IAAI,GAAIC,MAAD,IAAY;AACvB,QAAI,CAACH,OAAO,CAACI,QAAR,CAAiBD,MAAjB,CAAL,EAA+B;AAC7BE,MAAAA,SAAS,CAACF,MAAD,CAAT;AACD,KAFD,MAEO;AACLG,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACD;AACF,GAND;;AAQA,QAAME,SAAS,GAAIE,KAAD,IAAW;AAC3B,QAAIC,WAAW,GAAG,CAAC,GAAGR,OAAJ,CAAlB;AACAQ,IAAAA,WAAW,CAACC,IAAZ,CAAiBF,KAAjB;AACAN,IAAAA,UAAU,CAACO,WAAD,CAAV;AACD,GAJD;;AAMA,QAAMF,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIC,WAAW,GAAG,CAAC,GAAGR,OAAJ,CAAlB;AACA,UAAMU,KAAK,GAAGF,WAAW,CAACG,OAAZ,CAAoBJ,KAApB,CAAd;;AACA,QAAIG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdF,MAAAA,WAAW,CAACI,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B;AACD;;AACDT,IAAAA,UAAU,CAACO,WAAD,CAAV;AACD,GAPD;;AASA,QAAMK,UAAU,GAAG,MAAM;AACvB;AACAhB,IAAAA,WAAW,CAACiB,UAAZ,CAAuBhB,OAAvB,EAAgCE,OAAhC;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEA,OAAhB;AAAyB,QAAA,IAAI,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,OAAO,EAAEa,YAAhB;AAA8B,QAAA,IAAI,EAAEb;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME;AAAA,gBAAIc,IAAI,CAACC,SAAL,CAAenB,OAAf;AAAJ;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA,gBAAIkB,IAAI,CAACC,SAAL,CAAejB,OAAf;AAAJ;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,OAAO,EAAEa,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA7CuBjB,a;;KAAAA,a;AA+CxB,MAAMsB,WAAW,GAAG,CAClB,UADkB,EAElB,SAFkB,EAGlB,WAHkB,EAIlB,YAJkB,EAKlB,YALkB,EAMlB,OANkB,CAApB;AASA,MAAMH,YAAY,GAAG,CACnB,KADmB,EAEnB,eAFmB,EAGnB,QAHmB,EAInB,SAJmB,EAKnB,YALmB,CAArB,C,CAQA;AACA;AACA;AACA","sourcesContent":["import React, { useState } from \"react\";\nimport PostService from \"../../Shared/PostService\";\nimport Foods from \"./Foods\";\nimport \"./Questionnaire.css\";\n\nexport default function Questionnaire() {\n  const postService = new PostService();\n  const [feeling, setFeeling] = useState(1);\n  const [factors, setFactors] = useState([]);\n\n  const pick = (factor) => {\n    if (!factors.includes(factor)) {\n      addFactor(factor);\n    } else {\n      removeFactor(factor);\n    }\n  };\n\n  const addFactor = (value) => {\n    let factorsCopy = [...factors];\n    factorsCopy.push(value);\n    setFactors(factorsCopy);\n  };\n\n  const removeFactor = (value) => {\n    let factorsCopy = [...factors];\n    const index = factorsCopy.indexOf(value);\n    if (index > -1) {\n      factorsCopy.splice(index, 1);\n    }\n    setFactors(factorsCopy);\n  };\n\n  const submitPost = () => {\n    // feeling 1 for good, 0 for bad\n    postService.createPost(feeling, factors);\n  };\n\n  return (\n    <div className=\"questionnaire\">\n      <header>Let's figure out why you feel ___!</header>\n      <div className=\"grid\">\n        <Foods factors={factors} pick={pick} />\n        <Foods factors={otherFactors} pick={pick} />\n      </div>\n      <p>{JSON.stringify(feeling)}</p>\n      <p>{JSON.stringify(factors)}</p>\n      <button onClick={submitPost}>SUBMIT</button>\n    </div>\n  );\n}\n\nconst intoxicants = [\n  \"caffeine\",\n  \"alcohol\",\n  \"marijuana\",\n  \"cigarettes\",\n  \"medication\",\n  \"other\",\n];\n\nconst otherFactors = [\n  \"Nut\",\n  \"LateNightMeal\",\n  \"Stress\",\n  \"Boredom\",\n  \"Inactivity\",\n];\n\n// MEAL SIZE\n// MEAL CONTENT\n// MEAL TIME\n// MOOD AT THE TIME OF MEAL\n"]},"metadata":{},"sourceType":"module"}