{"ast":null,"code":"import Connection from \"./Connection\";\n\nclass UserService {\n  async register(user) {\n    await Connection.post(\"/customer\", user).then(response => {\n      alert(\"registerCustomer \" + response.data);\n    });\n  }\n\n  async getCustomer(customerId) {\n    const data = await Connection.get(`/customer/${customerId}`).then(response => {\n      return response.data;\n    });\n    return data;\n  }\n\n  async getCustomers() {\n    let customers = [];\n    const data = await Connection.get(\"/customer\").then(response => {\n      return response.data;\n    });\n    data.forEach(customer => {\n      customers.push(customer);\n    });\n    return customers;\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Backend/UserService.js"],"names":["Connection","UserService","register","user","post","then","response","alert","data","getCustomer","customerId","get","getCustomers","customers","forEach","customer","push"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,QAAN,CAAeC,IAAf,EAAqB;AACnB,UAAMH,UAAU,CAACI,IAAX,CAAgB,WAAhB,EAA6BD,IAA7B,EAAmCE,IAAnC,CAAyCC,QAAD,IAAc;AAC1DC,MAAAA,KAAK,CAAC,sBAAsBD,QAAQ,CAACE,IAAhC,CAAL;AACD,KAFK,CAAN;AAGD;;AAED,QAAMC,WAAN,CAAkBC,UAAlB,EAA8B;AAC5B,UAAMF,IAAI,GAAG,MAAMR,UAAU,CAACW,GAAX,CAAgB,aAAYD,UAAW,EAAvC,EAA0CL,IAA1C,CAChBC,QAAD,IAAc;AACZ,aAAOA,QAAQ,CAACE,IAAhB;AACD,KAHgB,CAAnB;AAKA,WAAOA,IAAP;AACD;;AAED,QAAMI,YAAN,GAAqB;AACnB,QAAIC,SAAS,GAAG,EAAhB;AACA,UAAML,IAAI,GAAG,MAAMR,UAAU,CAACW,GAAX,CAAe,WAAf,EAA4BN,IAA5B,CAAkCC,QAAD,IAAc;AAChE,aAAOA,QAAQ,CAACE,IAAhB;AACD,KAFkB,CAAnB;AAGAA,IAAAA,IAAI,CAACM,OAAL,CAAcC,QAAD,IAAc;AACzBF,MAAAA,SAAS,CAACG,IAAV,CAAeD,QAAf;AACD,KAFD;AAGA,WAAOF,SAAP;AACD;;AAzBe;;AA4BlB,eAAeZ,WAAf","sourcesContent":["import Connection from \"./Connection\";\n\nclass UserService {\n  async register(user) {\n    await Connection.post(\"/customer\", user).then((response) => {\n      alert(\"registerCustomer \" + response.data);\n    });\n  }\n\n  async getCustomer(customerId) {\n    const data = await Connection.get(`/customer/${customerId}`).then(\n      (response) => {\n        return response.data;\n      }\n    );\n    return data;\n  }\n\n  async getCustomers() {\n    let customers = [];\n    const data = await Connection.get(\"/customer\").then((response) => {\n      return response.data;\n    });\n    data.forEach((customer) => {\n      customers.push(customer);\n    });\n    return customers;\n  }\n}\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}