{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/dex/client/src/Pages/Home/Components/Journal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PostService from \"../../../Shared/PostService\";\nimport JournalForm from \"../Components/JournalForm\";\nimport Post from \"../Components/Post\";\nexport default function Journal() {\n  _s();\n\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [posts, setPosts] = useState(null);\n  useEffect(() => {\n    if (!hasLoaded) {\n      refreshPosts();\n    }\n  });\n\n  const refreshPosts = () => {\n    const postService = new PostService();\n    postService.getPosts().then(posts => {\n      if (posts) {\n        setPosts(posts.reverse());\n        setHasLoaded(true);\n      }\n    });\n  };\n\n  const deletePost = post => {\n    const postService = new PostService();\n    postService.deletePost(post._id).then(() => {\n      refreshPosts();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(JournalForm, {\n      refreshPosts: refreshPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), posts && posts.length > 0 ? posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      data: post,\n      deletePost: deletePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 31\n    }, this)) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Journal, \"pFK+hCsiUL5nIzu06Zu06UQBOe0=\");\n\n_c = Journal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Journal\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/dex/client/src/Pages/Home/Components/Journal.js"],"names":["React","useEffect","useState","PostService","JournalForm","Post","Journal","hasLoaded","setHasLoaded","posts","setPosts","refreshPosts","postService","getPosts","then","reverse","deletePost","post","_id","length","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACM,SAAL,EAAgB;AACdI,MAAAA,YAAY;AACb;AACF,GAJQ,CAAT;;AAMA,QAAMA,YAAY,GAAG,MAAM;AACzB,UAAMC,WAAW,GAAG,IAAIT,WAAJ,EAApB;AACAS,IAAAA,WAAW,CAACC,QAAZ,GAAuBC,IAAvB,CAA6BL,KAAD,IAAW;AACrC,UAAIA,KAAJ,EAAW;AACTC,QAAAA,QAAQ,CAACD,KAAK,CAACM,OAAN,EAAD,CAAR;AACAP,QAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,KALD;AAMD,GARD;;AAUA,QAAMQ,UAAU,GAAIC,IAAD,IAAU;AAC3B,UAAML,WAAW,GAAG,IAAIT,WAAJ,EAApB;AACAS,IAAAA,WAAW,CAACI,UAAZ,CAAuBC,IAAI,CAACC,GAA5B,EAAiCJ,IAAjC,CAAsC,MAAM;AAC1CH,MAAAA,YAAY;AACb,KAFD;AAGD,GALD;;AAOA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,YAAY,EAAEA;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,KAAK,IAAIA,KAAK,CAACU,MAAN,GAAe,CAAxB,GACGV,KAAK,CAACW,GAAN,CAAWH,IAAD,iBAAU,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,IAAZ;AAAkB,MAAA,UAAU,EAAED;AAA9B;AAAA;AAAA;AAAA;AAAA,YAApB,CADH,GAEG,IAJN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnCuBV,O;;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PostService from \"../../../Shared/PostService\";\nimport JournalForm from \"../Components/JournalForm\";\nimport Post from \"../Components/Post\";\n\nexport default function Journal() {\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    if (!hasLoaded) {\n      refreshPosts();\n    }\n  });\n\n  const refreshPosts = () => {\n    const postService = new PostService();\n    postService.getPosts().then((posts) => {\n      if (posts) {\n        setPosts(posts.reverse());\n        setHasLoaded(true);\n      }\n    });\n  };\n\n  const deletePost = (post) => {\n    const postService = new PostService();\n    postService.deletePost(post._id).then(() => {\n      refreshPosts();\n    });\n  };\n\n  return (\n    <div>\n      <JournalForm refreshPosts={refreshPosts} />\n      {posts && posts.length > 0\n        ? posts.map((post) => <Post data={post} deletePost={deletePost} />)\n        : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}