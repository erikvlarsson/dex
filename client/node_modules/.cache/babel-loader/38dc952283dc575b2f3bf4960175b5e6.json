{"ast":null,"code":"import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let res = false;\n    await Api.post(\"/register\", userData).then(response => {\n      if (response.status === 201) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  async login(userData) {\n    let res = null;\n    await Api.post(\"/login\", userData).then(response => {\n      // evaluates to true if user authenticated\n      if (response) {\n        localStorage.access_token = res.access_token;\n        return true;\n      }\n\n      alert(JSON.stringify(response));\n    });\n    return false;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then(response => {\n      res = response;\n    });\n    return res;\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Shared/UserService.js"],"names":["Api","UserService","register","userData","res","post","then","response","status","login","localStorage","access_token","alert","JSON","stringify","getUsers","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,QAAN,CAAeC,QAAf,EAAyB;AACvB,QAAIC,GAAG,GAAG,KAAV;AACA,UAAMJ,GAAG,CAACK,IAAJ,CAAS,WAAT,EAAsBF,QAAtB,EAAgCG,IAAhC,CAAsCC,QAAD,IAAc;AACvD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BJ,QAAAA,GAAG,GAAG,IAAN;AACD;AACF,KAJK,CAAN;AAKA,WAAOA,GAAP;AACD;;AAED,QAAMK,KAAN,CAAYN,QAAZ,EAAsB;AACpB,QAAIC,GAAG,GAAG,IAAV;AACA,UAAMJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmBF,QAAnB,EAA6BG,IAA7B,CAAmCC,QAAD,IAAc;AACpD;AACA,UAAIA,QAAJ,EAAc;AACZG,QAAAA,YAAY,CAACC,YAAb,GAA4BP,GAAG,CAACO,YAAhC;AACA,eAAO,IAAP;AACD;;AACDC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeP,QAAf,CAAD,CAAL;AACD,KAPK,CAAN;AAQA,WAAO,KAAP;AACD;;AAED,QAAMQ,QAAN,GAAiB;AACf,QAAIX,GAAG,GAAG,IAAV;AACA,UAAMJ,GAAG,CAACgB,GAAJ,CAAQ,QAAR,EAAkBV,IAAlB,CAAwBC,QAAD,IAAc;AACzCH,MAAAA,GAAG,GAAGG,QAAN;AACD,KAFK,CAAN;AAGA,WAAOH,GAAP;AACD;;AA9Be;;AAiClB,eAAeH,WAAf","sourcesContent":["import Api from \"./Api\";\n\nclass UserService {\n  async register(userData) {\n    let res = false;\n    await Api.post(\"/register\", userData).then((response) => {\n      if (response.status === 201) {\n        res = true;\n      }\n    });\n    return res;\n  }\n\n  async login(userData) {\n    let res = null;\n    await Api.post(\"/login\", userData).then((response) => {\n      // evaluates to true if user authenticated\n      if (response) {\n        localStorage.access_token = res.access_token;\n        return true;\n      }\n      alert(JSON.stringify(response));\n    });\n    return false;\n  }\n\n  async getUsers() {\n    let res = null;\n    await Api.get(\"/users\").then((response) => {\n      res = response;\n    });\n    return res;\n  }\n}\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}