{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/frontend/src/AppMain.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useContext } from \"react\";\nimport UserService from \"./Shared/UserService\";\nimport Routes from \"./Routes\";\nimport Spinner from \"./Components/Spinner/Spinner\";\nimport { AuthContext } from \"./Contexts/AuthContext\";\n\nfunction AppMain() {\n  _s();\n\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  useEffect(() => {\n    if (!hasLoaded) {\n      const userService = new UserService();\n      userService.getRefreshToken().then(success => {\n        if (success) {\n          setAuth(true).then(() => {\n            setHasLoaded(true);\n          });\n        } else {\n          setAuth(false).then(() => {\n            setHasLoaded(true);\n          });\n        }\n      });\n    }\n  }, []);\n\n  if (!hasLoaded) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        auth: auth,\n        hasLoaded: hasLoaded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(AppMain, \"CCV4oNwxnMdTQ5V1NDb336EEzA8=\");\n\n_c = AppMain;\nexport default AppMain;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppMain\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/AppMain.js"],"names":["useEffect","useState","useContext","UserService","Routes","Spinner","AuthContext","AppMain","auth","setAuth","hasLoaded","setHasLoaded","userService","getRefreshToken","then","success"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,UAAU,CAACI,WAAD,CAApC;AACA,QAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACU,SAAL,EAAgB;AACd,YAAME,WAAW,GAAG,IAAIT,WAAJ,EAApB;AACAS,MAAAA,WAAW,CAACC,eAAZ,GAA8BC,IAA9B,CAAoCC,OAAD,IAAa;AAC9C,YAAIA,OAAJ,EAAa;AACXN,UAAAA,OAAO,CAAC,IAAD,CAAP,CAAcK,IAAd,CAAmB,MAAM;AACvBH,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,WAFD;AAGD,SAJD,MAIO;AACLF,UAAAA,OAAO,CAAC,KAAD,CAAP,CAAeK,IAAf,CAAoB,MAAM;AACxBH,YAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,WAFD;AAGD;AACF,OAVD;AAWD;AACF,GAfQ,EAeN,EAfM,CAAT;;AAiBA,MAAI,CAACD,SAAL,EAAgB;AACd,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEF,IAAd;AAAoB,QAAA,SAAS,EAAEE;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;AACF;;GA/BQH,O;;KAAAA,O;AAiCT,eAAeA,OAAf","sourcesContent":["import { useEffect, useState, useContext } from \"react\";\nimport UserService from \"./Shared/UserService\";\nimport Routes from \"./Routes\";\nimport Spinner from \"./Components/Spinner/Spinner\";\nimport { AuthContext } from \"./Contexts/AuthContext\";\n\nfunction AppMain() {\n  const { auth, setAuth } = useContext(AuthContext);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    if (!hasLoaded) {\n      const userService = new UserService();\n      userService.getRefreshToken().then((success) => {\n        if (success) {\n          setAuth(true).then(() => {\n            setHasLoaded(true);\n          });\n        } else {\n          setAuth(false).then(() => {\n            setHasLoaded(true);\n          });\n        }\n      });\n    }\n  }, []);\n\n  if (!hasLoaded) {\n    return <Spinner />;\n  } else {\n    return (\n      <div className=\"App\">\n        <Routes auth={auth} hasLoaded={hasLoaded} />\n        <div id=\"alert\" />\n      </div>\n    );\n  }\n}\n\nexport default AppMain;\n"]},"metadata":{},"sourceType":"module"}