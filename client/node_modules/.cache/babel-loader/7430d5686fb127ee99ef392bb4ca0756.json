{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/erik/Desktop/Software/frontend/src/Pages/Authentication/Authentication.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\nexport default function Authentication({\n  setAuth\n}) {\n  _s();\n\n  const [isSignupMode, setSignupMode] = useState(false);\n\n  if (isSignupMode) {\n    return /*#__PURE__*/_jsxDEV(Signup, {\n      goToLogin: () => setSignupMode(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Login, {\n      goToSignup: () => setSignupMode(true),\n      setAuth: setAuth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n}\n\n_s(Authentication, \"dZhVQRJupIVqumoWATFBpH7Riyg=\");\n\n_c = Authentication;\n\nvar _c;\n\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Pages/Authentication/Authentication.js"],"names":["React","useState","Login","Signup","Authentication","setAuth","isSignupMode","setSignupMode"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,eAAe,SAASC,cAAT,CAAwB;AAAEC,EAAAA;AAAF,CAAxB,EAAqC;AAAA;;AAClD,QAAM,CAACC,YAAD,EAAeC,aAAf,IAAgCN,QAAQ,CAAC,KAAD,CAA9C;;AAEA,MAAIK,YAAJ,EAAkB;AAChB,wBAAO,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,MAAMC,aAAa,CAAC,KAAD;AAAtC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,wBAAO,QAAC,KAAD;AAAO,MAAA,UAAU,EAAE,MAAMA,aAAa,CAAC,IAAD,CAAtC;AAA8C,MAAA,OAAO,EAAEF;AAAvD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AACF;;GARuBD,c;;KAAAA,c","sourcesContent":["import React, { useState } from \"react\";\nimport Login from \"./Login\";\nimport Signup from \"./Signup\";\n\nexport default function Authentication({ setAuth }) {\n  const [isSignupMode, setSignupMode] = useState(false);\n\n  if (isSignupMode) {\n    return <Signup goToLogin={() => setSignupMode(false)} />;\n  } else {\n    return <Login goToSignup={() => setSignupMode(true)} setAuth={setAuth} />;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}