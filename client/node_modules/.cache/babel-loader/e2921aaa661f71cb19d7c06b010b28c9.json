{"ast":null,"code":"import Connection from \"./Connection\";\n\nclass UserService {\n  async register(user) {\n    await Connection.post(\"/register\", user).then(response => {\n      alert(\"registerUser \" + response.data);\n    });\n  }\n\n  async getUser(id) {\n    const data = await Connection.get(`/users/${id}`).then(response => {\n      return response.data;\n    });\n    return data;\n  }\n\n  async getUsers() {\n    let users = [];\n    const data = await Connection.get(\"/users\").then(response => {\n      return response.data;\n    });\n    data.forEach(user => {\n      users.push(user);\n    });\n    return users;\n  }\n\n}\n\nexport default UserService;","map":{"version":3,"sources":["/Users/erik/Desktop/Software/frontend/src/Backend/UserService.js"],"names":["Connection","UserService","register","user","post","then","response","alert","data","getUser","id","get","getUsers","users","forEach","push"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAN,CAAkB;AAChB,QAAMC,QAAN,CAAeC,IAAf,EAAqB;AACnB,UAAMH,UAAU,CAACI,IAAX,CAAgB,WAAhB,EAA6BD,IAA7B,EAAmCE,IAAnC,CAAyCC,QAAD,IAAc;AAC1DC,MAAAA,KAAK,CAAC,kBAAkBD,QAAQ,CAACE,IAA5B,CAAL;AACD,KAFK,CAAN;AAGD;;AAED,QAAMC,OAAN,CAAcC,EAAd,EAAkB;AAChB,UAAMF,IAAI,GAAG,MAAMR,UAAU,CAACW,GAAX,CAAgB,UAASD,EAAG,EAA5B,EAA+BL,IAA/B,CAAqCC,QAAD,IAAc;AACnE,aAAOA,QAAQ,CAACE,IAAhB;AACD,KAFkB,CAAnB;AAGA,WAAOA,IAAP;AACD;;AAED,QAAMI,QAAN,GAAiB;AACf,QAAIC,KAAK,GAAG,EAAZ;AACA,UAAML,IAAI,GAAG,MAAMR,UAAU,CAACW,GAAX,CAAe,QAAf,EAAyBN,IAAzB,CAA+BC,QAAD,IAAc;AAC7D,aAAOA,QAAQ,CAACE,IAAhB;AACD,KAFkB,CAAnB;AAGAA,IAAAA,IAAI,CAACM,OAAL,CAAcX,IAAD,IAAU;AACrBU,MAAAA,KAAK,CAACE,IAAN,CAAWZ,IAAX;AACD,KAFD;AAGA,WAAOU,KAAP;AACD;;AAvBe;;AA0BlB,eAAeZ,WAAf","sourcesContent":["import Connection from \"./Connection\";\n\nclass UserService {\n  async register(user) {\n    await Connection.post(\"/register\", user).then((response) => {\n      alert(\"registerUser \" + response.data);\n    });\n  }\n\n  async getUser(id) {\n    const data = await Connection.get(`/users/${id}`).then((response) => {\n      return response.data;\n    });\n    return data;\n  }\n\n  async getUsers() {\n    let users = [];\n    const data = await Connection.get(\"/users\").then((response) => {\n      return response.data;\n    });\n    data.forEach((user) => {\n      users.push(user);\n    });\n    return users;\n  }\n}\n\nexport default UserService;\n"]},"metadata":{},"sourceType":"module"}